---
description: Testing strategies and quality standards for Agent-OS
globs: ["**/*"]
alwaysApply: true
---

# Testing Strategy & Quality Standards

## Context
Canonical testing guidelines for microservice, frontend & AI workflows in Agent‑OS projects.

<conditional-block context-check="testing-strategies">
IF this Testing Strategies section already applied:
  SKIP: Re-reading this section
ELSE:
  READ: The following strategy

### 🧱 1. Foundation – Shift Left & TestOps
- **Shift‑Left**: unit & integration tests written early by devs.
- Embrace **TestOps**: test lifecycle, dashboards, CI/CD orchestration.

### 🧩 2. Microservices Testing Pyramid
- **Unit Tests** via Vitest (frontend) & JUnit/Jacoco (backend).
- **Contract Tests** (Pact, Spring Cloud Contract).
- **Integration Tests** via Testcontainers.
- **End‑to‑End Tests** only critical workflows.

### 🛠 3. Performance, Resilience & Chaos
- Backend P95 ≤ 150 ms, Frontend TTI ≤ 1.8 s.
- Chaos‑testing for resilience validation.

### 🔐 4. Security & Compliance Testing
- Automated static scans (Dependabot, Sonar), vulnerability scans & pen-tests.

### 🤖 5. AI‑Aware & Continuous Testing
- AI‑assisted test generation & self‑healing tests.
- Shift‑right monitoring: observability & telemetry.

### 📊 6. Prioritization & Risk‑Based Test Planning
- Risk‑based testing: critical workflows first.
- Reassess coverage quarterly.

### 📌 7. Metrics & Gating
- ≥ 85% branch coverage.
- CI gates on coverage, SAST, linting, performance.

</conditional-block>
