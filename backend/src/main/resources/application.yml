spring:
  application:
    name: tappha-backend
  
  datasource:
    url: jdbc:postgresql://localhost:5432/tappha
    username: ${DB_USERNAME:tappha}
    password: ${DB_PASSWORD:tappha}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 50
        order_inserts: true
        order_updates: true

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: tappha-homeassistant
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: true
      auto-commit-interval: 1000
      session-timeout: 30000
      heartbeat-interval: 10000
      max-poll-records: 500
      fetch-min-size: 1
      fetch-max-wait: 500
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      retries: 3
      batch-size: 16384
      buffer-memory: 33554432
      compression-type: snappy
      linger-ms: 10

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile

server:
  port: 8080
  servlet:
    context-path: /api

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.tappha: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Home Assistant Integration Configuration
tappha:
  homeassistant:
    connection:
      timeout: 10000
      retry-attempts: 3
      retry-delay: 1000
    websocket:
      heartbeat-interval: 30000
      reconnect-delay: 5000
      max-reconnect-attempts: 10
    event-processing:
      batch-size: 100
      processing-delay: 100
      max-queue-size: 10000
    security:
      token-encryption-key: ${TOKEN_ENCRYPTION_KEY:default-key-change-in-production}
    monitoring:
      metrics-interval: 60000
      health-check-interval: 30000

# InfluxDB Configuration
spring:
  influx:
    url: http://localhost:8086
    token: ${INFLUXDB_TOKEN}
    org: tappha
    bucket: tappha-metrics 